# This file is automatically generated by the build system.
# Do not edit this file directly.

from __future__ import annotations
from typing import TYPE_CHECKING

from multiconn_archicad.models.official.commands import (
    GetElementsRelatedToZonesParameters,
    GetElementsRelatedToZonesResult,
)
from multiconn_archicad.models.official.types import ElementIdArrayItem, ElementType, ElementsWrapper, ErrorItem

if TYPE_CHECKING:
    from multiconn_archicad.core.core_commands import CoreCommands


class ElementRelationCommands:
    def __init__(self, core: CoreCommands):
        self._core = core

    def get_elements_related_to_zones(
        self, zones: list[ElementIdArrayItem], element_types: None | list[ElementType] = None
    ) -> list[ElementsWrapper | ErrorItem]:
        """
        Returns related elements of the given zones. The related elements will be grouped by
        type. If multiple zones was given, then the order of the returned list is that of the
        given zones.

        Args:
            zones (list[ElementIdArrayItem]): A list of elements.
            element_types (None | list[ElementType]): If this parameter is given, then only
                related elements with the requested types will be listed.

        Raises:
            ArchicadAPIError: If the API returns an error response.
            RequestError: If there is a network or connection error.
        """
        params_dict = {
            "zones": zones,
            "elementTypes": element_types,
        }
        validated_params = GetElementsRelatedToZonesParameters(**params_dict)
        response_dict = self._core.post_command(
            "API.GetElementsRelatedToZones", validated_params.model_dump(mode="json", by_alias=True, exclude_none=True)
        )
        validated_response = GetElementsRelatedToZonesResult.model_validate(response_dict)
        return validated_response.elementsRelatedToZones
