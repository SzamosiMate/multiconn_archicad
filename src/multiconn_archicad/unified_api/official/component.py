# This file is automatically generated by the build system.
# Do not edit this file directly.

from __future__ import annotations
from typing import TYPE_CHECKING

from multiconn_archicad.models.official.commands import (
    GetComponentsOfElementsParameters,
    GetComponentsOfElementsResult,
    GetPropertyValuesOfElementComponentsParameters,
    GetPropertyValuesOfElementComponentsResult,
)
from multiconn_archicad.models.official.types import (
    ElementComponentIdArrayItem,
    ElementComponentsWrapper,
    ElementIdArrayItem,
    ErrorItem,
    PropertyIdArrayItem,
    PropertyValuesWrapperItem,
)

if TYPE_CHECKING:
    from multiconn_archicad.core.core_commands import CoreCommands


class ComponentCommands:
    def __init__(self, core: CoreCommands):
        self._core = core

    def get_components_of_elements(
        self, elements: list[ElementIdArrayItem]
    ) -> list[ElementComponentsWrapper | ErrorItem]:
        """
        Returns the identifier of every component for a list of elements. The order of the
        returned list is the same as the given elements.

        Args:
            elements (list[ElementIdArrayItem]): A list of elements.

        Returns:
            list[ElementComponentsWrapper | ErrorItem]: Array of component list or error.

        Raises:
            ArchicadAPIError: If the API returns an error response.
            RequestError: If there is a network or connection error.
            pydantic.ValidationError: If the parameters, or the API Response fail validation.
        """
        params_dict = {
            "elements": elements,
        }
        validated_params = GetComponentsOfElementsParameters(**params_dict)
        response_dict = self._core.post_command(
            "API.GetComponentsOfElements", validated_params.model_dump(mode="json", by_alias=True, exclude_none=True)
        )
        validated_response = GetComponentsOfElementsResult.model_validate(response_dict)
        return validated_response.componentsOfElements

    def get_property_values_of_element_components(
        self, element_components: list[ElementComponentIdArrayItem], properties: list[PropertyIdArrayItem]
    ) -> list[ErrorItem | PropertyValuesWrapperItem]:
        """
        Returns the property values of the components for the given property.

        Args:
            element_components (list[ElementComponentIdArrayItem]): List of components of
                elements.
            properties (list[PropertyIdArrayItem]): A list of property identifiers.

        Returns:
            list[ErrorItem | PropertyValuesWrapperItem]: List of property value lists. The order
                of the outer list is that of the given components. The order of the inner lists
                are that of the given properties.

        Raises:
            ArchicadAPIError: If the API returns an error response.
            RequestError: If there is a network or connection error.
            pydantic.ValidationError: If the parameters, or the API Response fail validation.
        """
        params_dict = {
            "elementComponents": element_components,
            "properties": properties,
        }
        validated_params = GetPropertyValuesOfElementComponentsParameters(**params_dict)
        response_dict = self._core.post_command(
            "API.GetPropertyValuesOfElementComponents",
            validated_params.model_dump(mode="json", by_alias=True, exclude_none=True),
        )
        validated_response = GetPropertyValuesOfElementComponentsResult.model_validate(response_dict)
        return validated_response.propertyValuesForElementComponents
