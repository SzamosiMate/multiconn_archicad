# This file is automatically generated by the build system.
# Do not edit this file directly.

from __future__ import annotations
from typing import TYPE_CHECKING

from multiconn_archicad.models.tapir.commands import (
    GetAddOnVersionResult,
    GetArchicadLocationResult,
    GetCurrentWindowTypeResult,
)
from multiconn_archicad.models.tapir.types import WindowType

if TYPE_CHECKING:
    from multiconn_archicad.core.core_commands import CoreCommands


class ApplicationCommands:
    def __init__(self, core: CoreCommands):
        self._core = core

    def get_add_on_version(self) -> str:
        """
        Retrieves the version of the Tapir Additional JSON Commands Add-On.

        Raises:
            ArchicadAPIError: If the API returns an error response.
            RequestError: If there is a network or connection error.
        """
        response_dict = self._core.post_tapir_command("GetAddOnVersion")
        validated_response = GetAddOnVersionResult.model_validate(response_dict)
        return validated_response.version

    def get_archicad_location(self) -> str:
        """
        Retrieves the location of the currently running Archicad executable.

        Raises:
            ArchicadAPIError: If the API returns an error response.
            RequestError: If there is a network or connection error.
        """
        response_dict = self._core.post_tapir_command("GetArchicadLocation")
        validated_response = GetArchicadLocationResult.model_validate(response_dict)
        return validated_response.archicadLocation

    def get_current_window_type(self) -> WindowType:
        """
        Returns the type of the current (active) window.

        Raises:
            ArchicadAPIError: If the API returns an error response.
            RequestError: If there is a network or connection error.
        """
        response_dict = self._core.post_tapir_command("GetCurrentWindowType")
        validated_response = GetCurrentWindowTypeResult.model_validate(response_dict)
        return validated_response.currentWindowType

    def quit_archicad(self) -> None:
        """
        Performs a quit operation on the currently running Archicad instance.

        Raises:
            ArchicadAPIError: If the API returns an error response.
            RequestError: If there is a network or connection error.
        """
        self._core.post_tapir_command("QuitArchicad")
        return None
