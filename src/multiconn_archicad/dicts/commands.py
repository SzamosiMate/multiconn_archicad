from __future__ import annotations
from typing import Any, List, Literal, TypedDict, Union
from typing_extensions import NotRequired

### This file is automatically generated and split. Do not edit directly. ###


from .types import (
    Attribute,
    AttributeIds,
    AttributePropertyValues,
    AttributeType,
    BoundingBoxes3D,
    BuildingMaterialDataArrayItem,
    ClassificationSystemIds,
    ColumnsDatum,
    Comment,
    CompositeDataArrayItem,
    Conflict,
    ConnectedElement,
    Databases,
    DetailsOfElement,
    DocumentRevision,
    ElementClassifications,
    ElementClassificationsOrErrors,
    ElementFilter,
    ElementPropertyValues,
    ElementType,
    Elements,
    ElementsWithDetail,
    ElementsWithGDLParameter,
    ElementsWithMoveVector,
    ExecutionResult,
    ExecutionResults,
    FavoritesFromElement,
    Field,
    GDLParameterList,
    Hotlinks,
    Issue,
    IssueCommentStatus,
    IssueElementType,
    IssueId,
    Issues,
    LayerDataArrayItem,
    Library,
    MeshesDatum,
    ModelViewOption,
    NavigatorItemIds,
    NavigatorItemIdsWithViewSetting,
    ObjectsDatum,
    PolylinesDatum,
    ProjectLocation,
    Property,
    PropertyDefinition,
    PropertyDetails,
    PropertyGroup,
    PropertyGroupId,
    PropertyId,
    PropertyIdOrErrorArray,
    PropertyIds,
    PropertyValuesOrErrorArray,
    RevisionChange,
    RevisionChangesOfEntities,
    RevisionIssue,
    SlabsDatum,
    Story,
    Subelement,
    SurveyPoint,
    ViewSettingsOrError,
    ViewTransformationsOrError,
    WindowType,
    ZonesDatum,
)


class AddCommentToIssueParameters(TypedDict):
    issueId: IssueId
    author: NotRequired[str]
    status: NotRequired[IssueCommentStatus]
    text: str


class ApplyFavoritesToElementDefaultsParameters(TypedDict):
    favorites: List[str]


class ApplyFavoritesToElementDefaultsResult(TypedDict):
    executionResults: ExecutionResults


class AttachElementsToIssueParameters(TypedDict):
    issueId: IssueId
    elements: Elements
    type: IssueElementType


class ChangeSelectionOfElementsParameters(TypedDict):
    addElementsToSelection: NotRequired[Elements]
    removeElementsFromSelection: NotRequired[Elements]


class ChangeSelectionOfElementsResult(TypedDict):
    executionResultsOfAddToSelection: ExecutionResults
    executionResultsOfRemoveFromSelection: ExecutionResults


class CreateBuildingMaterialsParameters(TypedDict):
    buildingMaterialDataArray: List[BuildingMaterialDataArrayItem]
    overwriteExisting: NotRequired[bool]


class CreateBuildingMaterialsResult(TypedDict):
    attributeIds: AttributeIds


class CreateColumnsParameters(TypedDict):
    columnsData: List[ColumnsDatum]


class CreateColumnsResult(TypedDict):
    elements: Elements


class CreateCompositesParameters(TypedDict):
    compositeDataArray: List[CompositeDataArrayItem]
    overwriteExisting: NotRequired[bool]


class CreateCompositesResult(TypedDict):
    attributeIds: AttributeIds


class CreateFavoritesFromElementsParameters(TypedDict):
    favoritesFromElements: List[FavoritesFromElement]


class CreateFavoritesFromElementsResult(TypedDict):
    executionResults: ExecutionResults


class CreateIssueParameters(TypedDict):
    name: str
    parentIssueId: NotRequired[IssueId]
    tagText: NotRequired[str]


class CreateIssueResult(TypedDict):
    issueId: IssueId


class CreateLayersParameters(TypedDict):
    layerDataArray: List[LayerDataArrayItem]
    overwriteExisting: NotRequired[bool]


class CreateLayersResult(TypedDict):
    attributeIds: AttributeIds


class CreateMeshesParameters(TypedDict):
    meshesData: List[MeshesDatum]


class CreateMeshesResult(TypedDict):
    elements: Elements


class CreateObjectsParameters(TypedDict):
    objectsData: List[ObjectsDatum]


class CreateObjectsResult(TypedDict):
    elements: Elements


class CreatePolylinesParameters(TypedDict):
    polylinesData: List[PolylinesDatum]


class CreatePolylinesResult(TypedDict):
    elements: Elements


class CreatePropertyDefinitionsParameters(TypedDict):
    propertyDefinitions: List[PropertyDefinition]


class CreatePropertyDefinitionsResult(TypedDict):
    propertyIds: PropertyIdOrErrorArray


class CreatePropertyGroupsParameters(TypedDict):
    propertyGroups: List[PropertyGroup]


class CreatePropertyGroupsResult(TypedDict):
    propertyGroupIds: List[PropertyGroupId]


class CreateSlabsParameters(TypedDict):
    slabsData: List[SlabsDatum]


class CreateSlabsResult(TypedDict):
    elements: Elements


class CreateZonesParameters(TypedDict):
    zonesData: List[ZonesDatum]


class CreateZonesResult(TypedDict):
    elements: Elements


class DeleteIssueParameters(TypedDict):
    issueId: IssueId
    acceptAllElements: NotRequired[bool]


class DeletePropertyDefinitionsParameters(TypedDict):
    propertyIds: List[PropertyId]


class DeletePropertyDefinitionsResult(TypedDict):
    executionResults: ExecutionResults


class DeletePropertyGroupsParameters(TypedDict):
    propertyGroupIds: List[PropertyGroupId]


class DeletePropertyGroupsResult(TypedDict):
    executionResults: ExecutionResults


class DetachElementsFromIssueParameters(TypedDict):
    issueId: IssueId
    elements: Elements


class ExportIssuesToBCFParameters(TypedDict):
    issues: NotRequired[Issues]
    exportPath: str
    useExternalId: bool
    alignBySurveyPoint: bool


class FilterElementsParameters(TypedDict):
    elements: Elements
    filters: NotRequired[List[ElementFilter]]


class FilterElementsResult(TypedDict):
    elements: Elements


class GenerateDocumentationParameters(TypedDict):
    destinationFolder: str


class Get3DBoundingBoxesParameters(TypedDict):
    elements: Elements


class Get3DBoundingBoxesResult(TypedDict):
    boundingBoxes3D: BoundingBoxes3D


class GetAddOnVersionResult(TypedDict):
    version: str


class GetAllElementsParameters(TypedDict):
    filters: NotRequired[List[ElementFilter]]
    databases: NotRequired[Databases]


class GetAllElementsResult(TypedDict):
    elements: Elements
    executionResultForDatabases: NotRequired[ExecutionResults]


class GetAllPropertiesResult(TypedDict):
    properties: List[PropertyDetails]


class GetArchicadLocationResult(TypedDict):
    archicadLocation: str


class GetAttributesByTypeParameters(TypedDict):
    attributeType: AttributeType


class GetAttributesByTypeResult(TypedDict):
    attributes: List[Attribute]


class GetBuildingMaterialPhysicalPropertiesParameters(TypedDict):
    attributeIds: AttributeIds


class GetBuildingMaterialPhysicalPropertiesResult(TypedDict):
    properties: List[Property]


class GetClassificationsOfElementsParameters(TypedDict):
    elements: Elements
    classificationSystemIds: ClassificationSystemIds


class GetClassificationsOfElementsResult(TypedDict):
    elementClassifications: ElementClassificationsOrErrors


class GetCommentsFromIssueParameters(TypedDict):
    issueId: IssueId


class GetCommentsFromIssueResult(TypedDict):
    comments: List[Comment]


class GetConnectedElementsParameters(TypedDict):
    elements: Elements
    connectedElementType: ElementType


class GetConnectedElementsResult(TypedDict):
    connectedElements: List[ConnectedElement]


class GetCurrentRevisionChangesOfLayoutsParameters(TypedDict):
    layoutDatabaseIds: Databases


class GetCurrentRevisionChangesOfLayoutsResult(TypedDict):
    currentRevisionChangesOfLayouts: RevisionChangesOfEntities


class GetCurrentWindowTypeResult(TypedDict):
    currentWindowType: WindowType


class GetDatabaseIdFromNavigatorItemIdParameters(TypedDict):
    navigatorItemIds: NavigatorItemIds


class GetDatabaseIdFromNavigatorItemIdResult(TypedDict):
    databases: Databases


class GetDetailsOfElementsParameters(TypedDict):
    elements: Elements


class GetDetailsOfElementsResult(TypedDict):
    detailsOfElements: List[DetailsOfElement]


class GetDocumentRevisionsResult(TypedDict):
    documentRevisions: List[DocumentRevision]


class GetElementsAttachedToIssueParameters(TypedDict):
    issueId: IssueId
    type: IssueElementType


class GetElementsAttachedToIssueResult(TypedDict):
    elements: Elements


class GetElementsByTypeParameters(TypedDict):
    elementType: ElementType
    filters: NotRequired[List[ElementFilter]]
    databases: NotRequired[Databases]


class GetElementsByTypeResult(TypedDict):
    elements: Elements
    executionResultForDatabases: NotRequired[ExecutionResults]


class GetGDLParametersOfElementsParameters(TypedDict):
    elements: Elements


class GetGDLParametersOfElementsResult(TypedDict):
    gdlParametersOfElements: List[GDLParameterList]


class GetGeoLocationResult(TypedDict):
    projectLocation: ProjectLocation
    surveyPoint: SurveyPoint


class GetHotlinksResult(TypedDict):
    hotlinks: Hotlinks


class GetIssuesResult(TypedDict):
    issues: List[Issue]


class GetLibrariesResult(TypedDict):
    libraries: List[Library]


class GetModelViewOptionsResult(TypedDict):
    modelViewOptions: List[ModelViewOption]


class GetProjectInfoFieldsResult(TypedDict):
    fields: List[Field]


class GetProjectInfoResult(TypedDict):
    isUntitled: bool
    isTeamwork: bool
    projectLocation: NotRequired[str]
    projectPath: NotRequired[str]
    projectName: NotRequired[str]


class GetPropertyValuesOfAttributesParameters(TypedDict):
    attributeIds: AttributeIds
    properties: PropertyIds


class GetPropertyValuesOfAttributesResult(TypedDict):
    propertyValuesForAttributes: PropertyValuesOrErrorArray


class GetPropertyValuesOfElementsParameters(TypedDict):
    elements: Elements
    properties: PropertyIds


class GetPropertyValuesOfElementsResult(TypedDict):
    propertyValuesForElements: PropertyValuesOrErrorArray


class GetRevisionChangesOfElementsParameters(TypedDict):
    elements: Elements


class GetRevisionChangesOfElementsResult(TypedDict):
    revisionChangesOfElements: RevisionChangesOfEntities


class GetRevisionChangesResult(TypedDict):
    revisionChanges: List[RevisionChange]


class GetRevisionIssuesResult(TypedDict):
    revisionIssues: List[RevisionIssue]


class GetSelectedElementsResult(TypedDict):
    elements: Elements


class GetStoriesResult(TypedDict):
    firstStory: int
    lastStory: int
    actStory: int
    skipNullFloor: bool
    stories: List[Story]


class GetSubelementsOfHierarchicalElementsParameters(TypedDict):
    elements: Elements


class GetSubelementsOfHierarchicalElementsResult(TypedDict):
    subelements: List[Subelement]


class GetView2DTransformationsParameters(TypedDict):
    databases: NotRequired[Databases]


class GetView2DTransformationsResult(TypedDict):
    transformations: List[ViewTransformationsOrError]


class GetViewSettingsParameters(TypedDict):
    navigatorItemIds: NavigatorItemIds


class GetViewSettingsResult(TypedDict):
    viewSettings: List[ViewSettingsOrError]


class HighlightElementsParameters(TypedDict):
    elements: Elements
    highlightedColors: List[List[int]]
    wireframe3D: NotRequired[bool]
    nonHighlightedColor: NotRequired[List[int]]


class ImportIssuesFromBCFParameters(TypedDict):
    importPath: str
    alignBySurveyPoint: bool


class MoveElementsParameters(TypedDict):
    elementsWithMoveVectors: List[ElementsWithMoveVector]


class MoveElementsResult(TypedDict):
    executionResults: ExecutionResults


class OpenProjectParameters(TypedDict):
    projectFilePath: str


class PublishPublisherSetParameters(TypedDict):
    publisherSetName: str
    outputPath: NotRequired[str]


class ReleaseElementsParameters(TypedDict):
    elements: Elements


class ReserveElementsParameters(TypedDict):
    elements: Elements


class ReserveElementsResult(TypedDict):
    executionResult: ExecutionResult
    conflicts: NotRequired[List[Conflict]]


class SetClassificationsOfElementsParameters(TypedDict):
    elementClassifications: ElementClassifications


class SetClassificationsOfElementsResult(TypedDict):
    executionResults: ExecutionResults


class SetDetailsOfElementsParameters(TypedDict):
    elementsWithDetails: List[ElementsWithDetail]


class SetDetailsOfElementsResult(TypedDict):
    executionResults: ExecutionResults


class SetGDLParametersOfElementsParameters(TypedDict):
    elementsWithGDLParameters: List[ElementsWithGDLParameter]


class SetGDLParametersOfElementsResult(TypedDict):
    executionResults: ExecutionResults


class SetProjectInfoFieldParameters(TypedDict):
    projectInfoId: str
    projectInfoValue: str


class SetPropertyValuesOfAttributesParameters(TypedDict):
    attributePropertyValues: AttributePropertyValues


class SetPropertyValuesOfAttributesResult(TypedDict):
    executionResults: ExecutionResults


class SetPropertyValuesOfElementsParameters(TypedDict):
    elementPropertyValues: ElementPropertyValues


class SetPropertyValuesOfElementsResult(TypedDict):
    executionResults: ExecutionResults


class SetStoriesParameters(TypedDict):
    stories: List[Story]


class SetViewSettingsParameters(TypedDict):
    navigatorItemIdsWithViewSettings: List[NavigatorItemIdsWithViewSetting]


class SetViewSettingsResult(TypedDict):
    executionResults: ExecutionResults


class UpdateDrawingsParameters(TypedDict):
    elements: Elements
