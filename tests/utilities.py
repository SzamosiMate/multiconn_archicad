from pydantic import BaseModel
from enum import Enum
from typing import Any

def normalize_for_comparison(value: Any) -> Any:
    """
    Recursively normalizes a value to be comparable with a raw JSON dictionary
    generated by Hypothesis.
    """
    if isinstance(value, BaseModel):
        return value.model_dump(mode='json', by_alias=True, exclude_none=True)
    if isinstance(value, list):
        return [normalize_for_comparison(item) for item in value]
    if isinstance(value, tuple):
        return [normalize_for_comparison(item) for item in value]
    if isinstance(value, Enum):
        return value.value
    return value